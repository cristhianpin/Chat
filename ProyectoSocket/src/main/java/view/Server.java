
package view;

import cliente.ChatCliente;
import interfaz.interfaceSocketServer;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import modelo.ChatRoom;
import server.ChatServer;

/**
 *
 * @author Belén
 */
public final class Server extends javax.swing.JFrame {
    
    private ChatServer socketServer;
    private ChatCliente clientSocket;
    private interfaceSocketServer messageSocketServer;
    private DefaultListModel<String> modelo;
    private ChatRoom chatRoom;
    
    
    public interfaceSocketServer createMessageSocketServer() {
        return new interfaceSocketServer() {
            @Override
            public void onJoin(String name) {
                SwingUtilities.invokeLater(() -> {
                    if (name != null && !name.isEmpty()) {
                        modelo.addElement(name);
                    }
                    if (name != null && !name.isEmpty()) {
                        txtAreaServer.append(name + " se ha conectado.\n");
                    }
                });
            }

            @Override
            public void onLeave(String name) {
                SwingUtilities.invokeLater(() -> {
                     modelo.removeElement(name);
                    if (name != null && !name.isEmpty()) {
                        txtAreaServer.append(name + " se ha desconectado.\n");
                    }
                });
            }

            @Override
            public void log(String message) {
                SwingUtilities.invokeLater(() -> {
                    if (message != null && !message.isEmpty()) {
                        txtAreaServer.append(message + "\n");
                    }
                });
            }
        };
    }


    /**
     * Creates new form Server
     */
    public Server() {
   
        initComponents();
        txtAreaServer.setEnabled(false);
        modelo = new DefaultListModel<>();
        JListUsuarios.setModel(modelo);

        messageSocketServer = createMessageSocketServer();
        chatRoom = new ChatRoom(messageSocketServer);
        
        System.out.println("Iniciando listeners");

            try {
                socketServer = new ChatServer(chatRoom);
                socketServer.startServer();
                System.out.println("Servidor iniciado correctamente");
            } catch (Throwable throwable) {
                handleServerError(throwable);
            }
    }
    
    private void handleServerError(Throwable throwable) {
        SwingUtilities.invokeLater(() -> {
        String errorMessage = "Error al iniciar el servidor:\n" + throwable.getMessage();
        JOptionPane.showMessageDialog(null, errorMessage);
        throwable.printStackTrace();
    });
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTituloServer = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaServer = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnApagarServidor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JListUsuarios = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        labelTituloServer.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTituloServer.setText("SERVIDOR");
        labelTituloServer.setToolTipText("");

        txtAreaServer.setColumns(20);
        txtAreaServer.setRows(5);
        jScrollPane1.setViewportView(txtAreaServer);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Historial de conexiones:");

        btnApagarServidor.setBackground(new java.awt.Color(153, 153, 255));
        btnApagarServidor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnApagarServidor.setText("Apagar servidor");
        btnApagarServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarServidorActionPerformed(evt);
            }
        });

        JListUsuarios.setToolTipText("");
        jScrollPane2.setViewportView(JListUsuarios);
        JListUsuarios.getAccessibleContext().setAccessibleName("JListUsuarios");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Clientes:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelTituloServer)
                .addGap(177, 177, 177))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addGap(87, 87, 87)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(btnApagarServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelTituloServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnApagarServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                        .addGap(67, 67, 67))))
        );

        labelTituloServer.getAccessibleContext().setAccessibleName("labelTituloServer");
        btnApagarServidor.getAccessibleContext().setAccessibleName("btnApagarServidor");
        btnApagarServidor.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnApagarServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarServidorActionPerformed
        apagarServidor();
 
    }//GEN-LAST:event_btnApagarServidorActionPerformed

    private void apagarServidor(){
        //Explusar a todos los usuarios del chat
        if (chatRoom!=null){
            chatRoom.abandonarChat();
            JOptionPane.showMessageDialog(null, "El servidor está cerrado!");
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {

            new Server().setVisible(true);

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JListUsuarios;
    private javax.swing.JButton btnApagarServidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelTituloServer;
    private javax.swing.JTextArea txtAreaServer;
    // End of variables declaration//GEN-END:variables
    }
